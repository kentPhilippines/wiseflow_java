/*!
 * Simplified Tabler UI (https://tabler.io)
 * Copyright 2023
 */
 
document.addEventListener('DOMContentLoaded', function() {
  // 处理模态框
  window.bootstrap = {
    Modal: class Modal {
      constructor(element) {
        this.element = typeof element === 'string' ? document.querySelector(element) : element;
        this.backdrop = document.createElement('div');
        this.backdrop.className = 'modal-backdrop fade';
        this.isShown = false;
        
        // 关闭按钮事件监听
        const closeButtons = this.element.querySelectorAll('[data-bs-dismiss="modal"]');
        closeButtons.forEach(button => {
          button.addEventListener('click', () => this.hide());
        });
      }
      
      show() {
        if (this.isShown) return;
        this.isShown = true;
        
        document.body.appendChild(this.backdrop);
        this.element.style.display = 'block';
        this.element.classList.add('show');
        document.body.classList.add('modal-open');
        
        setTimeout(() => {
          this.backdrop.classList.add('show');
        }, 10);
      }
      
      hide() {
        if (!this.isShown) return;
        this.isShown = false;
        
        this.element.classList.remove('show');
        this.backdrop.classList.remove('show');
        
        setTimeout(() => {
          this.element.style.display = 'none';
          document.body.removeChild(this.backdrop);
          document.body.classList.remove('modal-open');
        }, 300);
      }
      
      static getInstance(element) {
        return new Modal(element);
      }
    }
  };
  
  // 处理折叠面板
  document.querySelectorAll('[data-bs-toggle="collapse"]').forEach(trigger => {
    const targetSelector = trigger.getAttribute('data-bs-target');
    const targetElement = document.querySelector(targetSelector);
    
    if (targetElement) {
      trigger.addEventListener('click', function() {
        const isCollapsed = targetElement.classList.contains('collapse');
        
        if (isCollapsed) {
          targetElement.classList.remove('collapse');
          targetElement.classList.add('collapsing');
          
          setTimeout(() => {
            targetElement.classList.remove('collapsing');
            targetElement.classList.add('collapse');
            targetElement.classList.add('show');
          }, 300);
        } else {
          targetElement.classList.remove('show');
          targetElement.classList.add('collapsing');
          
          setTimeout(() => {
            targetElement.classList.remove('collapsing');
            targetElement.classList.add('collapse');
          }, 300);
        }
      });
    }
  });
}); 